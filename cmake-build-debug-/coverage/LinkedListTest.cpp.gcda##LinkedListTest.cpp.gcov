        -:    0:Source:/home/drowlia/code_save/ds/LinkedList/LinkedListTest.cpp
        -:    0:Graph:/home/drowlia/code_save/ds/cmake-build-debug-/CMakeFiles/ds.dir/LinkedList/LinkedListTest.cpp.gcno
        -:    0:Data:/home/drowlia/code_save/ds/cmake-build-debug-/CMakeFiles/ds.dir/LinkedList/LinkedListTest.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <gtest/gtest.h>
        -:    2:#include "LinkedList.hpp"
        -:    3:
        -:    4:using namespace ds;
        -:    5:
        -:    6:// 测试默认构造函数
        4:    7:TEST(LinkedListTest, DefaultConstructor) {
        1:    8:    LinkedList<int> list;
       1*:    9:    EXPECT_TRUE(list.empty());
        1:   10:}
------------------
_ZN38LinkedListTest_DefaultConstructor_TestC2Ev:
function _ZN38LinkedListTest_DefaultConstructor_TestC2Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(LinkedListTest, DefaultConstructor) {
        1:    7-block 2
call    0 returned 1
------------------
_ZN38LinkedListTest_DefaultConstructor_TestD0Ev:
function _ZN38LinkedListTest_DefaultConstructor_TestD0Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(LinkedListTest, DefaultConstructor) {
        1:    7-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN38LinkedListTest_DefaultConstructor_TestD2Ev:
function _ZN38LinkedListTest_DefaultConstructor_TestD2Ev called 1 returned 100% blocks executed 100%
        1:    7:TEST(LinkedListTest, DefaultConstructor) {
        1:    7-block 2
call    0 returned 1
------------------
_ZN38LinkedListTest_DefaultConstructor_Test8TestBodyEv:
function _ZN38LinkedListTest_DefaultConstructor_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:    7:TEST(LinkedListTest, DefaultConstructor) {
        1:    8:    LinkedList<int> list;
        1:    8-block 2
call    0 returned 1
       1*:    9:    EXPECT_TRUE(list.empty());
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:    9-block 7
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:    9-block 8
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:    9-block 9
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:    9-block 11
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:    9-block 12
call   18 never executed
call   19 never executed
call   20 never executed
        1:    9-block 16
call   21 returned 1
    $$$$$:    9-block 19
call   22 never executed
    $$$$$:    9-block 21
call   23 never executed
    $$$$$:    9-block 23
    $$$$$:    9-block 24
    $$$$$:    9-block 25
call   24 never executed
    $$$$$:    9-block 27
    $$$$$:    9-block 28
call   25 never executed
        1:   10:}
call    0 returned 1
    $$$$$:   10-block 31
call    1 never executed
------------------
        -:   11:
        -:   12:// 测试带参数的构造函数
        4:   13:TEST(LinkedListTest, ParameterizedConstructor) {
        1:   14:    LinkedList<int> list(42);
       1*:   15:    EXPECT_FALSE(list.empty());
       1*:   16:    EXPECT_EQ(*list.begin(), 42);
        1:   17:}
------------------
_ZN44LinkedListTest_ParameterizedConstructor_TestC2Ev:
function _ZN44LinkedListTest_ParameterizedConstructor_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(LinkedListTest, ParameterizedConstructor) {
        1:   13-block 2
call    0 returned 1
------------------
_ZN44LinkedListTest_ParameterizedConstructor_TestD0Ev:
function _ZN44LinkedListTest_ParameterizedConstructor_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(LinkedListTest, ParameterizedConstructor) {
        1:   13-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN44LinkedListTest_ParameterizedConstructor_TestD2Ev:
function _ZN44LinkedListTest_ParameterizedConstructor_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(LinkedListTest, ParameterizedConstructor) {
        1:   13-block 2
call    0 returned 1
------------------
_ZN44LinkedListTest_ParameterizedConstructor_Test8TestBodyEv:
function _ZN44LinkedListTest_ParameterizedConstructor_Test8TestBodyEv called 1 returned 100% blocks executed 27%
        1:   13:TEST(LinkedListTest, ParameterizedConstructor) {
        1:   14:    LinkedList<int> list(42);
        1:   14-block 2
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   15:    EXPECT_FALSE(list.empty());
        1:   15-block 3
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   15-block 7
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:   15-block 8
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   15-block 9
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   15-block 11
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   15-block 12
call   18 never executed
call   19 never executed
call   20 never executed
        1:   15-block 16
call   21 returned 1
    $$$$$:   15-block 32
call   22 never executed
    $$$$$:   15-block 34
call   23 never executed
    $$$$$:   15-block 36
    $$$$$:   15-block 37
    $$$$$:   15-block 38
call   24 never executed
    $$$$$:   15-block 40
    $$$$$:   15-block 41
call   25 never executed
       1*:   16:    EXPECT_EQ(*list.begin(), 42);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16-block 18
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   16-block 20
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   16-block 22
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   16-block 23
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   16-block 25
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   16-block 26
call   20 never executed
call   21 never executed
        1:   16-block 29
call   22 returned 1
    $$$$$:   16-block 44
    $$$$$:   16-block 45
    $$$$$:   16-block 46
call   23 never executed
    $$$$$:   16-block 48
    $$$$$:   16-block 49
call   24 never executed
    $$$$$:   16-block 51
    $$$$$:   16-block 52
call   25 never executed
        1:   17:}
call    0 returned 1
    $$$$$:   17-block 55
call    1 never executed
------------------
        -:   18:
        -:   19:// 测试 push_front 方法
        4:   20:TEST(LinkedListTest, PushFront) {
        1:   21:    LinkedList<int> list;
        1:   22:    list.push_front(1);
       1*:   23:    EXPECT_EQ(*list.begin(), 1);
        1:   24:    list.push_front(2);
       1*:   25:    EXPECT_EQ(*list.begin(), 2);
       1*:   26:    EXPECT_EQ(*(++list.begin()), 1);
        1:   27:}
------------------
_ZN29LinkedListTest_PushFront_TestC2Ev:
function _ZN29LinkedListTest_PushFront_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   20:TEST(LinkedListTest, PushFront) {
        1:   20-block 2
call    0 returned 1
------------------
_ZN29LinkedListTest_PushFront_TestD0Ev:
function _ZN29LinkedListTest_PushFront_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   20:TEST(LinkedListTest, PushFront) {
        1:   20-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN29LinkedListTest_PushFront_TestD2Ev:
function _ZN29LinkedListTest_PushFront_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   20:TEST(LinkedListTest, PushFront) {
        1:   20-block 2
call    0 returned 1
------------------
_ZN29LinkedListTest_PushFront_Test8TestBodyEv:
function _ZN29LinkedListTest_PushFront_Test8TestBodyEv called 1 returned 100% blocks executed 30%
        1:   20:TEST(LinkedListTest, PushFront) {
        1:   21:    LinkedList<int> list;
        1:   21-block 2
call    0 returned 1
        1:   22:    list.push_front(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   22-block 47
       1*:   23:    EXPECT_EQ(*list.begin(), 1);
        1:   23-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block 5
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   23-block 7
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   23-block 9
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   23-block 10
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   23-block 12
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   23-block 13
call   20 never executed
call   21 never executed
        1:   23-block 16
call   22 returned 1
    $$$$$:   23-block 48
    $$$$$:   23-block 49
    $$$$$:   23-block 50
call   23 never executed
    $$$$$:   23-block 52
    $$$$$:   23-block 53
call   24 never executed
    $$$$$:   23-block 55
    $$$$$:   23-block 56
call   25 never executed
        1:   24:    list.push_front(2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   24-block 59
       1*:   25:    EXPECT_EQ(*list.begin(), 2);
        1:   25-block 18
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   25-block 19
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   25-block 21
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   25-block 23
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   25-block 24
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   25-block 26
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   25-block 27
call   20 never executed
call   21 never executed
        1:   25-block 30
call   22 returned 1
    $$$$$:   25-block 60
    $$$$$:   25-block 61
    $$$$$:   25-block 62
call   23 never executed
    $$$$$:   25-block 64
    $$$$$:   25-block 65
call   24 never executed
    $$$$$:   25-block 67
    $$$$$:   25-block 68
call   25 never executed
       1*:   26:    EXPECT_EQ(*(++list.begin()), 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   26-block 32
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   26-block 35
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   26-block 37
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   26-block 38
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   26-block 40
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:   26-block 41
call   21 never executed
call   22 never executed
        1:   26-block 44
call   23 returned 1
    $$$$$:   26-block 71
    $$$$$:   26-block 72
    $$$$$:   26-block 73
call   24 never executed
    $$$$$:   26-block 75
    $$$$$:   26-block 76
call   25 never executed
    $$$$$:   26-block 78
    $$$$$:   26-block 79
call   26 never executed
        1:   27:}
call    0 returned 1
    $$$$$:   27-block 82
call    1 never executed
------------------
        -:   28:
        -:   29:// 测试 push_back 方法
        4:   30:TEST(LinkedListTest, PushBack) {
        1:   31:    LinkedList<int> list;
        1:   32:    list.push_back(1);
       1*:   33:    EXPECT_EQ(*list.begin(), 1);
        1:   34:    list.push_back(2);
       1*:   35:    EXPECT_EQ(*list.begin(), 1);
       1*:   36:    EXPECT_EQ(*(++list.begin()), 2);
        1:   37:}
------------------
_ZN28LinkedListTest_PushBack_TestC2Ev:
function _ZN28LinkedListTest_PushBack_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   30:TEST(LinkedListTest, PushBack) {
        1:   30-block 2
call    0 returned 1
------------------
_ZN28LinkedListTest_PushBack_TestD0Ev:
function _ZN28LinkedListTest_PushBack_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   30:TEST(LinkedListTest, PushBack) {
        1:   30-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN28LinkedListTest_PushBack_TestD2Ev:
function _ZN28LinkedListTest_PushBack_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   30:TEST(LinkedListTest, PushBack) {
        1:   30-block 2
call    0 returned 1
------------------
_ZN28LinkedListTest_PushBack_Test8TestBodyEv:
function _ZN28LinkedListTest_PushBack_Test8TestBodyEv called 1 returned 100% blocks executed 30%
        1:   30:TEST(LinkedListTest, PushBack) {
        1:   31:    LinkedList<int> list;
        1:   31-block 2
call    0 returned 1
        1:   32:    list.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   32-block 47
       1*:   33:    EXPECT_EQ(*list.begin(), 1);
        1:   33-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   33-block 5
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   33-block 7
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   33-block 9
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   33-block 10
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   33-block 12
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   33-block 13
call   20 never executed
call   21 never executed
        1:   33-block 16
call   22 returned 1
    $$$$$:   33-block 48
    $$$$$:   33-block 49
    $$$$$:   33-block 50
call   23 never executed
    $$$$$:   33-block 52
    $$$$$:   33-block 53
call   24 never executed
    $$$$$:   33-block 55
    $$$$$:   33-block 56
call   25 never executed
        1:   34:    list.push_back(2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   34-block 59
       1*:   35:    EXPECT_EQ(*list.begin(), 1);
        1:   35-block 18
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   35-block 19
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   35-block 21
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   35-block 23
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   35-block 24
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   35-block 26
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   35-block 27
call   20 never executed
call   21 never executed
        1:   35-block 30
call   22 returned 1
    $$$$$:   35-block 60
    $$$$$:   35-block 61
    $$$$$:   35-block 62
call   23 never executed
    $$$$$:   35-block 64
    $$$$$:   35-block 65
call   24 never executed
    $$$$$:   35-block 67
    $$$$$:   35-block 68
call   25 never executed
       1*:   36:    EXPECT_EQ(*(++list.begin()), 2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   36-block 32
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   36-block 35
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   36-block 37
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   36-block 38
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   36-block 40
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:   36-block 41
call   21 never executed
call   22 never executed
        1:   36-block 44
call   23 returned 1
    $$$$$:   36-block 71
    $$$$$:   36-block 72
    $$$$$:   36-block 73
call   24 never executed
    $$$$$:   36-block 75
    $$$$$:   36-block 76
call   25 never executed
    $$$$$:   36-block 78
    $$$$$:   36-block 79
call   26 never executed
        1:   37:}
call    0 returned 1
    $$$$$:   37-block 82
call    1 never executed
------------------
        -:   38:
        -:   39:// 测试 insert 方法
        4:   40:TEST(LinkedListTest, Insert) {
        1:   41:    LinkedList<int> list;
        1:   42:    list.push_back(1);
        1:   43:    list.push_back(3);
        1:   44:    auto it = list.insert(++list.begin(), 2);
       1*:   45:    EXPECT_EQ(*it, 2);
       1*:   46:    EXPECT_EQ(*list.begin(), 1);
       1*:   47:    EXPECT_EQ(*(++list.begin()), 2);
       1*:   48:    EXPECT_EQ(*(++++list.begin()), 3);
        1:   49:}
------------------
_ZN26LinkedListTest_Insert_TestC2Ev:
function _ZN26LinkedListTest_Insert_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   40:TEST(LinkedListTest, Insert) {
        1:   40-block 2
call    0 returned 1
------------------
_ZN26LinkedListTest_Insert_TestD0Ev:
function _ZN26LinkedListTest_Insert_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   40:TEST(LinkedListTest, Insert) {
        1:   40-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN26LinkedListTest_Insert_TestD2Ev:
function _ZN26LinkedListTest_Insert_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   40:TEST(LinkedListTest, Insert) {
        1:   40-block 2
call    0 returned 1
------------------
_ZN26LinkedListTest_Insert_Test8TestBodyEv:
function _ZN26LinkedListTest_Insert_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:   40:TEST(LinkedListTest, Insert) {
        1:   41:    LinkedList<int> list;
        1:   41-block 2
call    0 returned 1
        1:   42:    list.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   42-block 64
        1:   43:    list.push_back(3);
        1:   43-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   43-block 65
        1:   44:    auto it = list.insert(++list.begin(), 2);
        1:   44-block 5
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   44-block 6
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:   44-block 66
    $$$$$:   44-block 67
       1*:   45:    EXPECT_EQ(*it, 2);
        1:   45-block 8
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   45-block 10
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   45-block 12
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   45-block 13
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   45-block 15
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   45-block 16
call   17 never executed
call   18 never executed
        1:   45-block 19
call   19 returned 1
    $$$$$:   45-block 68
    $$$$$:   45-block 69
call   20 never executed
    $$$$$:   45-block 71
    $$$$$:   45-block 72
call   21 never executed
    $$$$$:   45-block 74
    $$$$$:   45-block 75
call   22 never executed
       1*:   46:    EXPECT_EQ(*list.begin(), 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   46-block 21
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   46-block 23
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   46-block 25
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   46-block 26
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   46-block 28
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   46-block 29
call   20 never executed
call   21 never executed
        1:   46-block 32
call   22 returned 1
    $$$$$:   46-block 78
    $$$$$:   46-block 79
    $$$$$:   46-block 80
call   23 never executed
    $$$$$:   46-block 82
    $$$$$:   46-block 83
call   24 never executed
    $$$$$:   46-block 85
    $$$$$:   46-block 86
call   25 never executed
       1*:   47:    EXPECT_EQ(*(++list.begin()), 2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   47-block 34
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   47-block 37
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   47-block 39
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   47-block 40
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   47-block 42
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:   47-block 43
call   21 never executed
call   22 never executed
        1:   47-block 46
call   23 returned 1
    $$$$$:   47-block 89
    $$$$$:   47-block 90
    $$$$$:   47-block 91
call   24 never executed
    $$$$$:   47-block 93
    $$$$$:   47-block 94
call   25 never executed
    $$$$$:   47-block 96
    $$$$$:   47-block 97
call   26 never executed
       1*:   48:    EXPECT_EQ(*(++++list.begin()), 3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   48-block 48
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   48-block 52
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:   48-block 54
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   48-block 55
call   15 never executed
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   48-block 57
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   48-block 58
call   22 never executed
call   23 never executed
        1:   48-block 61
call   24 returned 1
    $$$$$:   48-block 100
    $$$$$:   48-block 101
    $$$$$:   48-block 102
call   25 never executed
    $$$$$:   48-block 104
    $$$$$:   48-block 105
call   26 never executed
    $$$$$:   48-block 107
    $$$$$:   48-block 108
call   27 never executed
        1:   49:}
call    0 returned 1
    $$$$$:   49-block 111
call    1 never executed
------------------
        -:   50:
        -:   51:// 测试 pop_front 方法
        4:   52:TEST(LinkedListTest, PopFront) {
        1:   53:    LinkedList<int> list;
        1:   54:    list.push_front(1);
        1:   55:    list.push_front(2);
        1:   56:    list.pop_front();
       1*:   57:    EXPECT_EQ(*list.begin(), 1);
        1:   58:    list.pop_front();
       1*:   59:    EXPECT_TRUE(list.empty());
        1:   60:}
------------------
_ZN28LinkedListTest_PopFront_TestC2Ev:
function _ZN28LinkedListTest_PopFront_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   52:TEST(LinkedListTest, PopFront) {
        1:   52-block 2
call    0 returned 1
------------------
_ZN28LinkedListTest_PopFront_TestD0Ev:
function _ZN28LinkedListTest_PopFront_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   52:TEST(LinkedListTest, PopFront) {
        1:   52-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN28LinkedListTest_PopFront_TestD2Ev:
function _ZN28LinkedListTest_PopFront_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   52:TEST(LinkedListTest, PopFront) {
        1:   52-block 2
call    0 returned 1
------------------
_ZN28LinkedListTest_PopFront_Test8TestBodyEv:
function _ZN28LinkedListTest_PopFront_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:   52:TEST(LinkedListTest, PopFront) {
        1:   53:    LinkedList<int> list;
        1:   53-block 2
call    0 returned 1
        1:   54:    list.push_front(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   54-block 36
        1:   55:    list.push_front(2);
        1:   55-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   55-block 37
        1:   56:    list.pop_front();
        1:   56-block 5
call    0 returned 1
       1*:   57:    EXPECT_EQ(*list.begin(), 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block 7
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   57-block 9
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   57-block 11
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   57-block 12
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   57-block 14
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   57-block 15
call   20 never executed
call   21 never executed
        1:   57-block 18
call   22 returned 1
    $$$$$:   57-block 38
    $$$$$:   57-block 39
    $$$$$:   57-block 40
call   23 never executed
    $$$$$:   57-block 42
    $$$$$:   57-block 43
call   24 never executed
    $$$$$:   57-block 45
    $$$$$:   57-block 46
call   25 never executed
        1:   58:    list.pop_front();
call    0 returned 1
       1*:   59:    EXPECT_TRUE(list.empty());
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   59-block 24
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:   59-block 25
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   59-block 26
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   59-block 28
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   59-block 29
call   18 never executed
call   19 never executed
call   20 never executed
        1:   59-block 33
call   21 returned 1
    $$$$$:   59-block 49
call   22 never executed
    $$$$$:   59-block 51
call   23 never executed
    $$$$$:   59-block 53
    $$$$$:   59-block 54
    $$$$$:   59-block 55
call   24 never executed
    $$$$$:   59-block 57
    $$$$$:   59-block 58
call   25 never executed
        1:   60:}
call    0 returned 1
    $$$$$:   60-block 61
call    1 never executed
------------------
        -:   61:
        -:   62:// 测试 pop_back 方法
        4:   63:TEST(LinkedListTest, PopBack) {
        1:   64:    LinkedList<int> list;
        1:   65:    list.push_back(1);
        1:   66:    list.push_back(2);
        1:   67:    list.pop_back();
       1*:   68:    EXPECT_EQ(*list.begin(), 1);
        1:   69:    list.pop_back();
       1*:   70:    EXPECT_TRUE(list.empty());
        1:   71:}
------------------
_ZN27LinkedListTest_PopBack_TestC2Ev:
function _ZN27LinkedListTest_PopBack_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST(LinkedListTest, PopBack) {
        1:   63-block 2
call    0 returned 1
------------------
_ZN27LinkedListTest_PopBack_TestD0Ev:
function _ZN27LinkedListTest_PopBack_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST(LinkedListTest, PopBack) {
        1:   63-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN27LinkedListTest_PopBack_TestD2Ev:
function _ZN27LinkedListTest_PopBack_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST(LinkedListTest, PopBack) {
        1:   63-block 2
call    0 returned 1
------------------
_ZN27LinkedListTest_PopBack_Test8TestBodyEv:
function _ZN27LinkedListTest_PopBack_Test8TestBodyEv called 1 returned 100% blocks executed 31%
        1:   63:TEST(LinkedListTest, PopBack) {
        1:   64:    LinkedList<int> list;
        1:   64-block 2
call    0 returned 1
        1:   65:    list.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   65-block 36
        1:   66:    list.push_back(2);
        1:   66-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   66-block 37
        1:   67:    list.pop_back();
        1:   67-block 5
call    0 returned 1
       1*:   68:    EXPECT_EQ(*list.begin(), 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   68-block 7
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   68-block 9
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   68-block 11
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   68-block 12
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   68-block 14
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   68-block 15
call   20 never executed
call   21 never executed
        1:   68-block 18
call   22 returned 1
    $$$$$:   68-block 38
    $$$$$:   68-block 39
    $$$$$:   68-block 40
call   23 never executed
    $$$$$:   68-block 42
    $$$$$:   68-block 43
call   24 never executed
    $$$$$:   68-block 45
    $$$$$:   68-block 46
call   25 never executed
        1:   69:    list.pop_back();
call    0 returned 1
       1*:   70:    EXPECT_TRUE(list.empty());
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   70-block 24
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:   70-block 25
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   70-block 26
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   70-block 28
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   70-block 29
call   18 never executed
call   19 never executed
call   20 never executed
        1:   70-block 33
call   21 returned 1
    $$$$$:   70-block 49
call   22 never executed
    $$$$$:   70-block 51
call   23 never executed
    $$$$$:   70-block 53
    $$$$$:   70-block 54
    $$$$$:   70-block 55
call   24 never executed
    $$$$$:   70-block 57
    $$$$$:   70-block 58
call   25 never executed
        1:   71:}
call    0 returned 1
    $$$$$:   71-block 61
call    1 never executed
------------------
        -:   72:
        -:   73:// 测试 erase 方法
        4:   74:TEST(LinkedListTest, Erase) {
        1:   75:    LinkedList<int> list;
        1:   76:    list.push_back(1);
        1:   77:    list.push_back(2);
        1:   78:    list.push_back(3);
        1:   79:    auto it = list.erase(++list.begin());
       1*:   80:    EXPECT_EQ(*it, 3);
       1*:   81:    EXPECT_EQ(*list.begin(), 1);
       1*:   82:    EXPECT_EQ(*(++list.begin()), 3);
        1:   83:}
------------------
_ZN25LinkedListTest_Erase_TestC2Ev:
function _ZN25LinkedListTest_Erase_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   74:TEST(LinkedListTest, Erase) {
        1:   74-block 2
call    0 returned 1
------------------
_ZN25LinkedListTest_Erase_TestD0Ev:
function _ZN25LinkedListTest_Erase_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   74:TEST(LinkedListTest, Erase) {
        1:   74-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN25LinkedListTest_Erase_TestD2Ev:
function _ZN25LinkedListTest_Erase_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   74:TEST(LinkedListTest, Erase) {
        1:   74-block 2
call    0 returned 1
------------------
_ZN25LinkedListTest_Erase_Test8TestBodyEv:
function _ZN25LinkedListTest_Erase_Test8TestBodyEv called 1 returned 100% blocks executed 32%
        1:   74:TEST(LinkedListTest, Erase) {
        1:   75:    LinkedList<int> list;
        1:   75-block 2
call    0 returned 1
        1:   76:    list.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   76-block 50
        1:   77:    list.push_back(2);
        1:   77-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   77-block 51
        1:   78:    list.push_back(3);
        1:   78-block 5
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   78-block 52
        1:   79:    auto it = list.erase(++list.begin());
        1:   79-block 6
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   79-block 7
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
    $$$$$:   79-block 53
       1*:   80:    EXPECT_EQ(*it, 3);
        1:   80-block 9
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   80-block 11
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   80-block 13
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   80-block 14
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   80-block 16
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   80-block 17
call   17 never executed
call   18 never executed
        1:   80-block 20
call   19 returned 1
    $$$$$:   80-block 54
    $$$$$:   80-block 55
call   20 never executed
    $$$$$:   80-block 57
    $$$$$:   80-block 58
call   21 never executed
    $$$$$:   80-block 60
    $$$$$:   80-block 61
call   22 never executed
       1*:   81:    EXPECT_EQ(*list.begin(), 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   81-block 22
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   81-block 24
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   81-block 26
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   81-block 27
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   81-block 29
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   81-block 30
call   20 never executed
call   21 never executed
        1:   81-block 33
call   22 returned 1
    $$$$$:   81-block 64
    $$$$$:   81-block 65
    $$$$$:   81-block 66
call   23 never executed
    $$$$$:   81-block 68
    $$$$$:   81-block 69
call   24 never executed
    $$$$$:   81-block 71
    $$$$$:   81-block 72
call   25 never executed
       1*:   82:    EXPECT_EQ(*(++list.begin()), 3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82-block 35
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   82-block 38
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   82-block 40
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   82-block 41
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   82-block 43
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:   82-block 44
call   21 never executed
call   22 never executed
        1:   82-block 47
call   23 returned 1
    $$$$$:   82-block 75
    $$$$$:   82-block 76
    $$$$$:   82-block 77
call   24 never executed
    $$$$$:   82-block 79
    $$$$$:   82-block 80
call   25 never executed
    $$$$$:   82-block 82
    $$$$$:   82-block 83
call   26 never executed
        1:   83:}
call    0 returned 1
    $$$$$:   83-block 86
call    1 never executed
------------------
        -:   84:
        -:   85:// 测试 find 方法
        4:   86:TEST(LinkedListTest, Find) {
        1:   87:    LinkedList<int> list;
        1:   88:    list.push_back(1);
        1:   89:    list.push_back(2);
        1:   90:    list.push_back(3);
       1*:   91:    EXPECT_TRUE(list.find(2));
       1*:   92:    EXPECT_FALSE(list.find(4));
        1:   93:}
------------------
_ZN24LinkedListTest_Find_TestC2Ev:
function _ZN24LinkedListTest_Find_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   86:TEST(LinkedListTest, Find) {
        1:   86-block 2
call    0 returned 1
------------------
_ZN24LinkedListTest_Find_TestD0Ev:
function _ZN24LinkedListTest_Find_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   86:TEST(LinkedListTest, Find) {
        1:   86-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN24LinkedListTest_Find_TestD2Ev:
function _ZN24LinkedListTest_Find_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   86:TEST(LinkedListTest, Find) {
        1:   86-block 2
call    0 returned 1
------------------
_ZN24LinkedListTest_Find_Test8TestBodyEv:
function _ZN24LinkedListTest_Find_Test8TestBodyEv called 1 returned 100% blocks executed 27%
        1:   86:TEST(LinkedListTest, Find) {
        1:   87:    LinkedList<int> list;
        1:   87-block 2
call    0 returned 1
        1:   88:    list.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   88-block 36
        1:   89:    list.push_back(2);
        1:   89-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   89-block 37
        1:   90:    list.push_back(3);
        1:   90-block 5
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   90-block 38
       1*:   91:    EXPECT_TRUE(list.find(2));
        1:   91-block 6
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   91-block 10
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:   91-block 11
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   91-block 12
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   91-block 14
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   91-block 15
call   18 never executed
call   19 never executed
call   20 never executed
        1:   91-block 19
call   21 returned 1
    $$$$$:   91-block 39
call   22 never executed
    $$$$$:   91-block 41
call   23 never executed
    $$$$$:   91-block 43
    $$$$$:   91-block 44
    $$$$$:   91-block 45
call   24 never executed
    $$$$$:   91-block 47
    $$$$$:   91-block 48
call   25 never executed
       1*:   92:    EXPECT_FALSE(list.find(4));
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   92-block 24
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:   92-block 25
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:   92-block 26
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:   92-block 28
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:   92-block 29
call   18 never executed
call   19 never executed
call   20 never executed
        1:   92-block 33
call   21 returned 1
    $$$$$:   92-block 51
call   22 never executed
    $$$$$:   92-block 53
call   23 never executed
    $$$$$:   92-block 55
    $$$$$:   92-block 56
    $$$$$:   92-block 57
call   24 never executed
    $$$$$:   92-block 59
    $$$$$:   92-block 60
call   25 never executed
        1:   93:}
call    0 returned 1
    $$$$$:   93-block 63
call    1 never executed
------------------
        -:   94:
        -:   95:// 测试 clear 方法
        4:   96:TEST(LinkedListTest, Clear) {
        1:   97:    LinkedList<int> list;
        1:   98:    list.push_back(1);
        1:   99:    list.push_back(2);
        1:  100:    list.clear();
       1*:  101:    EXPECT_TRUE(list.empty());
        1:  102:}
------------------
_ZN25LinkedListTest_Clear_TestC2Ev:
function _ZN25LinkedListTest_Clear_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   96:TEST(LinkedListTest, Clear) {
        1:   96-block 2
call    0 returned 1
------------------
_ZN25LinkedListTest_Clear_TestD0Ev:
function _ZN25LinkedListTest_Clear_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   96:TEST(LinkedListTest, Clear) {
        1:   96-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN25LinkedListTest_Clear_TestD2Ev:
function _ZN25LinkedListTest_Clear_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   96:TEST(LinkedListTest, Clear) {
        1:   96-block 2
call    0 returned 1
------------------
_ZN25LinkedListTest_Clear_Test8TestBodyEv:
function _ZN25LinkedListTest_Clear_Test8TestBodyEv called 1 returned 100% blocks executed 32%
        1:   96:TEST(LinkedListTest, Clear) {
        1:   97:    LinkedList<int> list;
        1:   97-block 2
call    0 returned 1
        1:   98:    list.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   98-block 22
        1:   99:    list.push_back(2);
        1:   99-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   99-block 23
        1:  100:    list.clear();
        1:  100-block 5
call    0 returned 1
       1*:  101:    EXPECT_TRUE(list.empty());
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  101-block 10
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
    %%%%%:  101-block 11
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
    %%%%%:  101-block 12
call   11 never executed
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:  101-block 14
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  101-block 15
call   18 never executed
call   19 never executed
call   20 never executed
        1:  101-block 19
call   21 returned 1
    $$$$$:  101-block 24
call   22 never executed
    $$$$$:  101-block 26
call   23 never executed
    $$$$$:  101-block 28
    $$$$$:  101-block 29
    $$$$$:  101-block 30
call   24 never executed
    $$$$$:  101-block 32
    $$$$$:  101-block 33
call   25 never executed
        1:  102:}
call    0 returned 1
    $$$$$:  102-block 36
call    1 never executed
------------------
        -:  103:
        -:  104:// 测试 copy 构造函数
        4:  105:TEST(LinkedListTest, CopyConstructor) {
        1:  106:    LinkedList<int> list1;
        1:  107:    list1.push_back(1);
        1:  108:    list1.push_back(2);
        1:  109:    LinkedList<int> list2 = list1;
       1*:  110:    EXPECT_EQ(*list2.begin(), 1);
       1*:  111:    EXPECT_EQ(*(++list2.begin()), 2);
       1*:  112:    EXPECT_NE(&(*list1.begin()), &(*list2.begin()));
        1:  113:}
------------------
_ZN35LinkedListTest_CopyConstructor_TestC2Ev:
function _ZN35LinkedListTest_CopyConstructor_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  105:TEST(LinkedListTest, CopyConstructor) {
        1:  105-block 2
call    0 returned 1
------------------
_ZN35LinkedListTest_CopyConstructor_TestD0Ev:
function _ZN35LinkedListTest_CopyConstructor_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  105:TEST(LinkedListTest, CopyConstructor) {
        1:  105-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN35LinkedListTest_CopyConstructor_TestD2Ev:
function _ZN35LinkedListTest_CopyConstructor_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  105:TEST(LinkedListTest, CopyConstructor) {
        1:  105-block 2
call    0 returned 1
------------------
_ZN35LinkedListTest_CopyConstructor_Test8TestBodyEv:
function _ZN35LinkedListTest_CopyConstructor_Test8TestBodyEv called 1 returned 100% blocks executed 32%
        1:  105:TEST(LinkedListTest, CopyConstructor) {
        1:  106:    LinkedList<int> list1;
        1:  106-block 2
call    0 returned 1
        1:  107:    list1.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  107-block 51
        1:  108:    list1.push_back(2);
        1:  108-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  108-block 52
        1:  109:    LinkedList<int> list2 = list1;
        1:  109-block 5
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  110:    EXPECT_EQ(*list2.begin(), 1);
        1:  110-block 6
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  110-block 7
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  110-block 9
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:  110-block 11
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  110-block 12
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  110-block 14
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  110-block 15
call   20 never executed
call   21 never executed
        1:  110-block 18
call   22 returned 1
    $$$$$:  110-block 53
    $$$$$:  110-block 54
    $$$$$:  110-block 55
call   23 never executed
    $$$$$:  110-block 57
    $$$$$:  110-block 58
call   24 never executed
    $$$$$:  110-block 60
    $$$$$:  110-block 61
call   25 never executed
       1*:  111:    EXPECT_EQ(*(++list2.begin()), 2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  111-block 20
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  111-block 23
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  111-block 25
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:  111-block 26
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  111-block 28
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  111-block 29
call   21 never executed
call   22 never executed
        1:  111-block 32
call   23 returned 1
    $$$$$:  111-block 64
    $$$$$:  111-block 65
    $$$$$:  111-block 66
call   24 never executed
    $$$$$:  111-block 68
    $$$$$:  111-block 69
call   25 never executed
    $$$$$:  111-block 71
    $$$$$:  111-block 72
call   26 never executed
       1*:  112:    EXPECT_NE(&(*list1.begin()), &(*list2.begin()));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  112-block 34
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  112-block 36
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:  112-block 38
call   11 returned 1
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:  112-block 40
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  112-block 41
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  112-block 43
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:  112-block 44
call   24 never executed
call   25 never executed
        1:  112-block 47
call   26 returned 1
    $$$$$:  112-block 75
    $$$$$:  112-block 76
    $$$$$:  112-block 77
    $$$$$:  112-block 78
    $$$$$:  112-block 79
call   27 never executed
    $$$$$:  112-block 81
    $$$$$:  112-block 82
call   28 never executed
    $$$$$:  112-block 84
    $$$$$:  112-block 85
call   29 never executed
        1:  113:}
call    0 returned 1
call    1 returned 1
    $$$$$:  113-block 88
call    2 never executed
    $$$$$:  113-block 90
call    3 never executed
------------------
        -:  114:
        -:  115:// 测试赋值操作符
        4:  116:TEST(LinkedListTest, AssignmentOperator) {
        1:  117:    LinkedList<int> list1;
        1:  118:    list1.push_back(1);
        1:  119:    list1.push_back(2);
        1:  120:    LinkedList<int> list2;
        1:  121:    list2 = list1;
       1*:  122:    EXPECT_EQ(*list2.begin(), 1);
       1*:  123:    EXPECT_EQ(*(++list2.begin()), 2);
       1*:  124:    EXPECT_NE(&(*list1.begin()), &(*list2.begin()));
        1:  125:}
------------------
_ZN38LinkedListTest_AssignmentOperator_TestC2Ev:
function _ZN38LinkedListTest_AssignmentOperator_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  116:TEST(LinkedListTest, AssignmentOperator) {
        1:  116-block 2
call    0 returned 1
------------------
_ZN38LinkedListTest_AssignmentOperator_TestD0Ev:
function _ZN38LinkedListTest_AssignmentOperator_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  116:TEST(LinkedListTest, AssignmentOperator) {
        1:  116-block 2
call    0 returned 1
call    1 returned 1
------------------
_ZN38LinkedListTest_AssignmentOperator_TestD2Ev:
function _ZN38LinkedListTest_AssignmentOperator_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  116:TEST(LinkedListTest, AssignmentOperator) {
        1:  116-block 2
call    0 returned 1
------------------
_ZN38LinkedListTest_AssignmentOperator_Test8TestBodyEv:
function _ZN38LinkedListTest_AssignmentOperator_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:  116:TEST(LinkedListTest, AssignmentOperator) {
        1:  117:    LinkedList<int> list1;
        1:  117-block 2
call    0 returned 1
        1:  118:    list1.push_back(1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  118-block 52
        1:  119:    list1.push_back(2);
        1:  119-block 4
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  119-block 53
        1:  120:    LinkedList<int> list2;
        1:  120-block 5
call    0 returned 1
        1:  121:    list2 = list1;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  122:    EXPECT_EQ(*list2.begin(), 1);
        1:  122-block 7
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block 8
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  122-block 10
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:  122-block 12
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  122-block 13
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  122-block 15
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:  122-block 16
call   20 never executed
call   21 never executed
        1:  122-block 19
call   22 returned 1
    $$$$$:  122-block 54
    $$$$$:  122-block 55
    $$$$$:  122-block 56
call   23 never executed
    $$$$$:  122-block 58
    $$$$$:  122-block 59
call   24 never executed
    $$$$$:  122-block 61
    $$$$$:  122-block 62
call   25 never executed
       1*:  123:    EXPECT_EQ(*(++list2.begin()), 2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  123-block 21
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  123-block 24
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  123-block 26
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:  123-block 27
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
    %%%%%:  123-block 29
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  123-block 30
call   21 never executed
call   22 never executed
        1:  123-block 33
call   23 returned 1
    $$$$$:  123-block 65
    $$$$$:  123-block 66
    $$$$$:  123-block 67
call   24 never executed
    $$$$$:  123-block 69
    $$$$$:  123-block 70
call   25 never executed
    $$$$$:  123-block 72
    $$$$$:  123-block 73
call   26 never executed
       1*:  124:    EXPECT_NE(&(*list1.begin()), &(*list2.begin()));
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  124-block 35
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  124-block 37
call    7 returned 1
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:  124-block 39
call   11 returned 1
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:  124-block 41
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:  124-block 42
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
    %%%%%:  124-block 44
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:  124-block 45
call   24 never executed
call   25 never executed
        1:  124-block 48
call   26 returned 1
    $$$$$:  124-block 76
    $$$$$:  124-block 77
    $$$$$:  124-block 78
    $$$$$:  124-block 79
    $$$$$:  124-block 80
call   27 never executed
    $$$$$:  124-block 82
    $$$$$:  124-block 83
call   28 never executed
    $$$$$:  124-block 85
    $$$$$:  124-block 86
call   29 never executed
        1:  125:}
call    0 returned 1
call    1 returned 1
    $$$$$:  125-block 89
call    2 never executed
    $$$$$:  125-block 91
call    3 never executed
------------------
