        -:    0:Source:/home/drowlia/code_save/ds/HashTable/HashTable.hpp
        -:    0:Graph:/home/drowlia/code_save/ds/cmake-build-debug-/CMakeFiles/ds.dir/HashTable/HashTableTest.cpp.gcno
        -:    0:Data:/home/drowlia/code_save/ds/cmake-build-debug-/CMakeFiles/ds.dir/HashTable/HashTableTest.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by lsx31 on 24-12-12.
        -:    3://
        -:    4:
        -:    5:#pragma once
        -:    6:
        -:    7:#include "../Pair/Pair.hpp"
        -:    8:#include "../LinkedList/LinkedList.hpp"
        -:    9:#include "../SeqTable/SeqTable.hpp"
        -:   10:
        -:   11:namespace ds {
        -:   12:
        -:   13:template <typename KeyType, typename ValueType>
        -:   14:class HashTable {
        -:   15:public:
        -:   16:	using value_type = ds::Pair<KeyType, ValueType>;
        -:   17:	using container_type = ds::LinkedList<value_type>;
        -:   18:	using table_type = ds::SeqTable<container_type>;
        -:   19:
function _ZN2ds9HashTableIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Em called 3 returned 100% blocks executed 100%
        3:   20:	explicit HashTable(size_t size = 10) : table_{size}, num_elements_{0} {}
        3:   20-block 2
call    0 returned 3
        -:   21:
function _ZN2ds9HashTableIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6insertERKiRKS6_ called 6 returned 100% blocks executed 77%
        6:   22:	void insert(const KeyType& key, const ValueType& value) {
        6:   23:		auto index = hash_function(key);
        6:   23-block 2
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
       6*:   24:		for (auto it = table_[index].begin(); it != table_[index].end(); ++it) {
        6:   24-block 3
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   24-block 4
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:   24-block 5
    %%%%%:   24-block 11
call    6 never executed
        6:   24-block 12
call    7 returned 6
branch  8 taken 6 (fallthrough)
branch  9 taken 0 (throw)
        6:   24-block 13
call   10 returned 6
branch 11 taken 6 (fallthrough)
branch 12 taken 0 (throw)
        6:   24-block 14
call   13 returned 6
branch 14 taken 1
branch 15 taken 5 (fallthrough)
    $$$$$:   24-block 22
        -:   25:			// 存在则更新
        1:   26:			if (it->first == key) {
        1:   26-block 6
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   27:				it->second = value;
        1:   27-block 8
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   28:				return;
        1:   28-block 10
        -:   29:			}
        -:   30:		}
        5:   31:		table_[index].push_back(value_type(key, value));
        5:   31-block 16
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   31-block 17
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
        5:   31-block 18
call    6 returned 5
branch  7 taken 5 (fallthrough)
branch  8 taken 0 (throw)
        5:   31-block 19
call    9 returned 5
    $$$$$:   31-block 24
call   10 never executed
    $$$$$:   31-block 26
        5:   32:		++num_elements_;
        -:   33:	}
        -:   34:
function _ZNK2ds9HashTableIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4findERKiRS6_ called 5 returned 100% blocks executed 85%
        5:   35:	bool find(const KeyType& key, ValueType& value) const {
        5:   36:		auto index = hash_function(key);
        5:   36-block 2
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
       5*:   37:		for (auto it = table_[index].begin(); it != table_[index].end(); ++it) {
        5:   37-block 3
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   37-block 4
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
        5:   37-block 5
    %%%%%:   37-block 11
call    6 never executed
        5:   37-block 12
call    7 returned 5
branch  8 taken 5 (fallthrough)
branch  9 taken 0 (throw)
        5:   37-block 13
call   10 returned 5
branch 11 taken 5 (fallthrough)
branch 12 taken 0 (throw)
        5:   37-block 14
call   13 returned 5
branch 14 taken 3
branch 15 taken 2 (fallthrough)
    $$$$$:   37-block 19
        3:   38:			if (it->first == key) {
        3:   38-block 6
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0
        3:   39:				value = it->second;
        3:   39-block 8
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:   40:				return true;
        3:   40-block 10
        -:   41:			}
        -:   42:		}
        2:   43:		return false;
        2:   43-block 16
        -:   44:	}
        -:   45:
function _ZN2ds9HashTableIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6removeERKi called 2 returned 100% blocks executed 85%
        2:   46:	bool remove(const KeyType& key) {
        2:   47:		auto index = hash_function(key);
        2:   47-block 2
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
       2*:   48:		for (auto it = table_[index].begin(); it != table_[index].end(); ++it) {
        2:   48-block 3
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   48-block 4
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   48-block 5
    %%%%%:   48-block 11
call    6 never executed
        2:   48-block 12
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
        2:   48-block 13
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:   48-block 14
call   13 returned 2
branch 14 taken 1
branch 15 taken 1 (fallthrough)
    $$$$$:   48-block 19
        1:   49:			if (it->first == key) {
        1:   49-block 6
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   50:				table_[index].erase(it);
        1:   50-block 8
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   50-block 9
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   51:				--num_elements_;
        1:   52:				return true;
        1:   52-block 10
        -:   53:			}
        -:   54:		}
        1:   55:		return false;
        1:   55-block 16
        -:   56:	}
        -:   57:
        -:   58:private:
        -:   59:	// hash function
function _ZNK2ds9HashTableIiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13hash_functionERKi called 13 returned 100% blocks executed 100%
       13:   60:	size_t hash_function(const KeyType& key) const {
        -:   61:		// using c++ 11 hash function
        -:   62:		std::hash<KeyType> hasher;
       13:   63:		return hasher(key) % table_.size();
       13:   63-block 2
call    0 returned 13
call    1 returned 13
        -:   64:	}
        -:   65:
        -:   66:	table_type table_;
        -:   67:	size_t num_elements_;
        -:   68:};
        -:   69:
        -:   70:}
        -:   71:
        -:   72:
        -:   73:
